2021-04-02 05:17:20 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-02 05:17:20 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-02 05:17:20 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02 05:17:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02 05:17:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02 05:17:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02 05:17:21 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-02 05:17:21 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02 05:17:23 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02 05:17:23 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02 05:17:23 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02 05:17:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02 05:17:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02 05:17:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02 05:17:26 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02 05:17:26 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02 05:17:26 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02 05:17:26 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02 05:17:26 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12bcd0c0
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41813449
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@58ebfd03
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2fea7088
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2fea7088
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2fea7088
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@6f2cb653
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@6f2cb653
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f2cb653
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@435871cb
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@435871cb
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@435871cb
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@27953a83
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@27953a83
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27953a83
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@efde75f
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@efde75f
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@efde75f
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@12bfd80d
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@12bfd80d
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@12bfd80d
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@295eaa7c
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@295eaa7c
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1dd0e7c4
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1dd0e7c4
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@37bd68c3
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37bd68c3
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1b065145
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@62dae540
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@14f5da2c
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14f5da2c
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@5b7ea70d
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5b7ea70d
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@29e6eb25
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@29e6eb25
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bc10d84
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bc10d84
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33e01298
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33e01298
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b968a76
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b968a76
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7829b776
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7829b776
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@458342d3
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@458342d3
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2692b61e
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2692b61e
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@878452d
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@878452d
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@665e9289
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@665e9289
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5536379e
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5536379e
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5536379e
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@470a696f
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@63192798
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63192798
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63192798
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28d6290
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@77602954
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@40258c2f
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40258c2f
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@73c60324
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73c60324
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44e3760b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44e3760b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@24bdb479
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@24bdb479
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@533377b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@533377b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ce61929
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@6e4de19b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e4de19b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@6e4de19b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7db82169
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@3f28bd56
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6d0b5baf
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@346a361
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@5bf22f18
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5bf22f18
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62e70ea3
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6d366c9b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d366c9b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@29ef6856
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@29ef6856
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@569bf9eb
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@eb6449b
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7e242b4d
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@3c0fae6c
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3c0fae6c
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eed46ee
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36b0fcd5
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fad94a7
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@475835b1
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6326d182
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5241cf67
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@716a7124
2021-04-02 05:17:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77192705
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02 05:17:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02 05:17:28 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02 05:17:28 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02 05:17:28 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-02 05:17:28 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02 05:17:28 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02 05:17:28 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-02 05:17:29 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02 05:17:29 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02 05:17:29 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02 05:17:29 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02 05:17:29 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02 05:17:30 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02 05:17:30 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2b87581
2021-04-02 05:17:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2b87581
2021-04-02 05:17:30 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@533377b
2021-04-02 05:17:30 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5183d589] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@511d5d04]
2021-04-02 05:17:30 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02 05:17:30 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02 05:17:30 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02 05:17:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-02 05:17:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property id
2021-04-02 05:17:30 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property about
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property email
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property name
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property phone
2021-04-02 05:17:30 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02 05:17:30 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02 05:17:30 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02 05:17:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-02 05:17:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property id
2021-04-02 05:17:30 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property client_id
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property number
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property value
2021-04-02 05:17:30 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02 05:17:30 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02 05:17:30 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02 05:17:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-02 05:17:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property id
2021-04-02 05:17:30 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property alias
2021-04-02 05:17:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02 05:17:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02 05:17:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-02 05:17:30 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02 05:17:30 DEBUG PropertyBinder:266 - Building property description
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02 05:17:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02 05:17:30 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02 05:17:30 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02 05:17:30 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02 05:17:30 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02 05:17:30 DEBUG Settings:68 - SessionFactory name : null
2021-04-02 05:17:30 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02 05:17:30 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02 05:17:30 DEBUG Settings:72 - Statistics: disabled
2021-04-02 05:17:30 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02 05:17:30 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02 05:17:30 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02 05:17:30 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02 05:17:30 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02 05:17:30 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02 05:17:30 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02 05:17:30 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02 05:17:30 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02 05:17:30 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02 05:17:30 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02 05:17:30 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02 05:17:30 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02 05:17:30 DEBUG Settings:91 - Named query checking : enabled
2021-04-02 05:17:30 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02 05:17:30 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02 05:17:30 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02 05:17:30 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02 05:17:30 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02 05:17:30 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02 05:17:30 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02 05:17:30 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02 05:17:30 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02 05:17:30 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02 05:17:30 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02 05:17:30 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02 05:17:30 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02 05:17:30 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02 05:17:30 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02 05:17:30 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02 05:17:30 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02 05:17:30 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02 05:17:30 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02 05:17:30 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02 05:17:30 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02 05:17:30 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1639f93a, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-02 05:17:30 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02 05:17:30 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02 05:17:30 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5183d589] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d5b5fa7]
2021-04-02 05:17:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-02 05:17:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-02 05:17:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-02 05:17:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-02 05:17:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-02 05:17:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02 05:17:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4288d98e]
2021-04-02 05:17:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02 05:17:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02 05:17:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02 05:17:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02 05:17:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-02 05:17:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02 05:17:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02 05:17:31 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02 05:17:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f6d381]
2021-04-02 05:17:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-02 05:17:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02 05:17:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02 05:17:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-02 05:17:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02 05:17:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02 05:17:31 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02 05:17:31 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02 05:17:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44784e2f]
2021-04-02 05:17:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02 05:17:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02 05:17:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-02 05:17:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02 05:17:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02 05:17:31 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02 05:17:31 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-02 05:17:31 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02 05:17:31 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02 05:17:31 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02 05:17:31 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02 05:17:31 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02 05:17:31 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02 05:17:31 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@48df4071
2021-04-02 05:17:31 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: a11eb2fd-4bc4-4663-9e2d-abf174bad649 (<unnamed>)
2021-04-02 05:17:31 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02 05:17:31 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@724b939e
2021-04-02 05:17:31 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02 05:17:31 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02 05:17:31 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-02 05:17:31 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02 05:17:31 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-02 05:17:31 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-02 05:17:31 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-02 05:18:08 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-02 05:18:08 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-02 05:18:08 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02 05:18:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02 05:18:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02 05:18:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02 05:18:08 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-02 05:18:08 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02 05:18:08 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02 05:18:08 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02 05:18:08 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02 05:18:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02 05:18:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02 05:18:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02 05:18:08 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02 05:18:08 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02 05:18:08 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02 05:18:08 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02 05:18:08 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12bcd0c0
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41813449
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@58ebfd03
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2fea7088
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2fea7088
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2fea7088
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@6f2cb653
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@6f2cb653
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f2cb653
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@435871cb
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@435871cb
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@435871cb
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@27953a83
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@27953a83
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27953a83
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@efde75f
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@efde75f
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@efde75f
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@12bfd80d
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@12bfd80d
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@12bfd80d
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@295eaa7c
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@295eaa7c
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1dd0e7c4
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1dd0e7c4
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@37bd68c3
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37bd68c3
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1b065145
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@62dae540
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@14f5da2c
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14f5da2c
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@5b7ea70d
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5b7ea70d
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@29e6eb25
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@29e6eb25
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bc10d84
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bc10d84
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33e01298
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33e01298
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b968a76
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b968a76
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7829b776
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7829b776
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@458342d3
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@458342d3
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2692b61e
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2692b61e
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@878452d
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@878452d
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@665e9289
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@665e9289
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5536379e
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5536379e
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5536379e
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@470a696f
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@63192798
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63192798
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63192798
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28d6290
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@77602954
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@40258c2f
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40258c2f
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@73c60324
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73c60324
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44e3760b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44e3760b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@24bdb479
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@24bdb479
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@533377b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@533377b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ce61929
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@6e4de19b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e4de19b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@6e4de19b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7db82169
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@3f28bd56
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6d0b5baf
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@346a361
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@5bf22f18
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5bf22f18
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62e70ea3
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6d366c9b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d366c9b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@29ef6856
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@29ef6856
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@569bf9eb
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@eb6449b
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7e242b4d
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@3c0fae6c
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3c0fae6c
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eed46ee
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36b0fcd5
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fad94a7
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@475835b1
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6326d182
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5241cf67
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@716a7124
2021-04-02 05:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77192705
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02 05:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02 05:18:09 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02 05:18:09 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02 05:18:09 INFO  pooling:121 - HHH10001001: Connection properties: {password=123456, user=postgres}
2021-04-02 05:18:09 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02 05:18:09 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02 05:18:09 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-02 05:18:09 WARN  JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:172)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:116)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at util.HibernateUtil.getSessionFactory(HibernateUtil.java:25)
	at dao.ClientDao.findById(ClientDao.java:49)
	at service.ClientService.findById(ClientService.java:28)
	at Main.main(Main.java:32)
2021-04-02 05:18:09 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02 05:18:09 DEBUG IdentifierHelperBuilder:189 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-04-02 05:18:09 DEBUG LobCreatorBuilderImpl:65 - HHH000422: Disabling contextual LOB creation as connection was null
2021-04-02 05:18:09 DEBUG SqlExceptionHelper:126 - Error calling Driver#connect [null]
org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:613)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:161)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:213)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:51)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:225)
	at org.postgresql.Driver.makeConnection(Driver.java:465)
	at org.postgresql.Driver.connect(Driver.java:264)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at util.HibernateUtil.getSessionFactory(HibernateUtil.java:25)
	at dao.ClientDao.findById(ClientDao.java:49)
	at service.ClientService.findById(ClientService.java:28)
	at Main.main(Main.java:32)
2021-04-02 05:18:09 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 28P01
2021-04-02 05:18:09 ERROR SqlExceptionHelper:142 - FATAL: password authentication failed for user "postgres"
2021-04-02 05:18:09 ERROR HibernateUtil:29 - Session error: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2021-04-06 09:26:52 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:26:52 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:26:52 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:26:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:26:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:26:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:26:52 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:26:52 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:26:53 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:26:53 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:26:53 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:26:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:26:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:26:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:26:54 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:26:54 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:26:54 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:26:54 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:26:54 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63a5e46c
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6bd51ed8
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4d4d48a6
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24528a25
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24528a25
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ee39da0
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ee39da0
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3b718392
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b718392
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee55e70
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126be319
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31198ceb
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31198ceb
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1db0ec27
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1db0ec27
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@62df0ff3
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@62df0ff3
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c5204af
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c5204af
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@71b1a49c
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@71b1a49c
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3b809711
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3b809711
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a415aa9
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a415aa9
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2392212b
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2392212b
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@669d2b1b
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@669d2b1b
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@2b50150
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b50150
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@64a1923a
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64a1923a
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e681bc
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a68df9
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@169da7f2
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2ba45490
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ba45490
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@36c54a56
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36c54a56
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@68ace111
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68ace111
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5eefa415
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5eefa415
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@718607eb
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@456abb66
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31be6b49
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6826c41e
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@437ebf59
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@71154f21
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71154f21
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6bfdb014
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@240139e1
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@240139e1
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3dedb4a6
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3dedb4a6
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49d98dc5
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@bf71cec
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@5e8a459
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@21ae6e73
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21ae6e73
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64a896b0
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e044b4a
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11a82d0f
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1adb7478
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ae66c85
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@16943e88
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4604b900
2021-04-06 09:26:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@73d6d0c
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:26:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:26:54 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:26:54 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:26:54 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:26:54 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:26:54 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:26:54 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:26:55 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:26:55 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:26:55 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:26:55 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:26:55 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:26:57 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:26:57 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62566842
2021-04-06 09:26:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@62566842
2021-04-06 09:26:57 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:26:57 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d070ef5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a55f148]
2021-04-06 09:26:57 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:26:57 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:26:57 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:26:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:26:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:26:57 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:26:57 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:26:57 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:26:57 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:26:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:26:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:26:57 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:26:57 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:26:57 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:26:57 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:26:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:26:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:26:57 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:26:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:26:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:26:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:26:57 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:26:57 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:26:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:26:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:26:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:26:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:26:57 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:26:57 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:26:57 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:26:57 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:26:57 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:26:57 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:26:57 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:26:57 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:26:57 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:26:57 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:26:57 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:26:57 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:26:57 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:26:57 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:26:57 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:26:57 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:26:57 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:26:57 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:26:57 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:26:57 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:26:57 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:26:57 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:26:57 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:26:57 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:26:57 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:26:57 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:26:57 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:26:57 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:26:57 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:26:57 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:26:57 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:26:57 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:26:57 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:26:57 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:26:57 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:26:57 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:26:57 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:26:57 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:26:57 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:26:57 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:26:57 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest,clientDataIsNotEmpty, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4fc3c165, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:26:57 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:26:57 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:26:57 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d070ef5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3dffc764]
2021-04-06 09:26:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:26:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:26:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:26:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:26:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:26:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:26:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4debbf0]
2021-04-06 09:26:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:26:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:26:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:26:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:26:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:26:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:26:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:26:58 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:26:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448b808a]
2021-04-06 09:26:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:26:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:26:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:26:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:26:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:26:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:26:58 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:26:58 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:26:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e190ed]
2021-04-06 09:26:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:26:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:26:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:26:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:26:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:26:58 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:26:58 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:26:58 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:26:58 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:26:58 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:26:58 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:26:58 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:26:58 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:26:58 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3290b1a6
2021-04-06 09:26:58 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: ae3e4c83-e8b8-4e60-bec4-021af1cf79c6 (<unnamed>)
2021-04-06 09:26:58 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:26:58 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@250b5e5b
2021-04-06 09:26:58 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:26:58 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:26:58 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:26:58 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:26:58 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:26:58 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:26:58 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:26:58 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:26:58 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:26:58 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:26:58 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:26:58 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:58 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:26:58 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:26:58 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:26:58 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:26:58 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:26:58 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:26:58 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:26:59 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:26:59 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:26:59 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:28:18 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:28:18 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:28:18 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:28:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:28:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:28:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:28:18 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:28:18 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:28:18 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:28:18 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:28:18 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:28:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:28:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:28:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:28:18 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:28:18 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:28:18 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:28:18 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:28:18 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@117632cf
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@117632cf
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@117632cf
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a1d3c1a
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@24528a25
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a772895
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4837595f
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4837595f
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4837595f
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@3fcdcf
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@3fcdcf
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3fcdcf
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@1e34c607
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@1e34c607
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e34c607
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@aa5455e
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@aa5455e
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@aa5455e
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1af05b03
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1af05b03
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1af05b03
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@4a8b5227
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@4a8b5227
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a8b5227
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@27f0ad19
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@27f0ad19
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27f0ad19
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@273c947f
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@273c947f
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e8823d2
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e8823d2
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2237bada
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2237bada
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e0d4a8
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bf61e67
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@51671b08
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@51671b08
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@26f3d90c
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@26f3d90c
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@2b50150
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b50150
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@17f460bb
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@17f460bb
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@23c650a3
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@23c650a3
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c09d180
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c09d180
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e053511
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e053511
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf7aee
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf7aee
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7af707e0
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7af707e0
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@68ace111
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@68ace111
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@181d7f28
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@181d7f28
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@79c5636f
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@79c5636f
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@79c5636f
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@757f675c
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@5e63cad
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5e63cad
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5e63cad
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@867ba60
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@456abb66
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@70d8de
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@70d8de
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@63a5d002
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63a5d002
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@150d80c4
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@150d80c4
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@410e94e
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@410e94e
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b69d40d
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b69d40d
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@304a9d7b
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@7f34a967
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f34a967
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@7f34a967
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8dfe921
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8dfe921
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8dfe921
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@57f64f5e
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2c30b71f
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2577d6c8
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2577d6c8
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2577d6c8
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@43d455c9
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@43d455c9
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@43d455c9
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@210f0cc1
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@55caeb35
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@d4602a
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d4602a
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@36a7abe1
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@3961a41a
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3961a41a
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@13e9f2e2
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13e9f2e2
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c4bc9fc
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d0332e1
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@5bdaf2ce
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7dc51783
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7dc51783
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@304b9f1a
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75699e35
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@107e5441
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4aeaadc1
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@263558c9
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f14f20c
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7daa61f3
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62315f22
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:28:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:28:19 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:28:19 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:28:19 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:28:19 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:28:19 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:28:19 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:28:19 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:28:19 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:28:19 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:28:19 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:28:19 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:28:19 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@128c502c
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@128c502c
2021-04-06 09:28:19 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5b69d40d
2021-04-06 09:28:19 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30669dac] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@629adce]
2021-04-06 09:28:20 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:28:20 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:28:20 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:28:20 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:28:20 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:28:20 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:28:20 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:28:20 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:28:20 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:28:20 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:28:20 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:28:20 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:28:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:28:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:28:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:28:20 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:28:20 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:28:20 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:28:20 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:28:20 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:28:20 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:28:20 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:28:20 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:28:20 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:28:20 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:28:20 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:28:20 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:28:20 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:28:20 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:28:20 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:28:20 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:28:20 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:28:20 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:28:20 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:28:20 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:28:20 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:28:20 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:28:20 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:28:20 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:28:20 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:28:20 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:28:20 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:28:20 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:28:20 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:28:20 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:28:20 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:28:20 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:28:20 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:28:20 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:28:20 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:28:20 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:28:20 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:28:20 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:28:20 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:28:20 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:28:20 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:28:20 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:28:20 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:28:20 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:28:20 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:28:20 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:28:20 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest,clientDataIsNotEmpty, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@726aa968, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:28:20 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:28:20 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:28:20 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30669dac] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@23f3da8b]
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:28:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:28:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3520963d]
2021-04-06 09:28:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:28:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:28:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:28:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:28:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:28:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:28:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:28:20 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:28:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76bf1bb8]
2021-04-06 09:28:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:28:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:28:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:28:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:28:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:28:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:28:20 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:28:20 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:28:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76536c53]
2021-04-06 09:28:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:28:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:28:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:28:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:28:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:28:20 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:28:20 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:28:20 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:28:20 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:28:20 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:28:20 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:28:20 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:28:20 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:28:20 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@ca8ef3a
2021-04-06 09:28:20 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: a9de8464-1c26-4578-82d6-f22ea2d3b771 (<unnamed>)
2021-04-06 09:28:20 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:28:20 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@664212ab
2021-04-06 09:28:20 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:28:20 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:28:20 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:28:20 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:28:20 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:28:20 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:28:20 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:28:20 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:28:20 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:28:20 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:28:20 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:28:20 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:28:20 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:28:20 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:28:20 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:28:20 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:28:20 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:28:20 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:28:20 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:28:20 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:28:20 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:29:52 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:29:52 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:29:52 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:29:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:29:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:29:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:29:52 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:29:52 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:29:52 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:29:52 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:29:52 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:29:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:29:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:29:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:29:52 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:29:52 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:29:52 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:29:52 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:29:52 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5c3b6c6e
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5c3b6c6e
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5c3b6c6e
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@306851c7
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@354fc8f0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1080b026
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@5c87bfe2
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@5c87bfe2
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c87bfe2
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a791b66
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a791b66
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a791b66
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4fc5e095
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4fc5e095
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4fc5e095
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@62ea3440
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@62ea3440
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62ea3440
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@749c877b
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@749c877b
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@749c877b
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@160ac7fb
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@160ac7fb
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@160ac7fb
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@618c5d94
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@618c5d94
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@618c5d94
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@285c08c8
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@285c08c8
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ece4966
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ece4966
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@5b11a194
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5b11a194
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4721d212
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bff1903
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@f79a760
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f79a760
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@652a7737
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@652a7737
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6cbcf243
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6cbcf243
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3234f74e
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3234f74e
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@366ef90e
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@366ef90e
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21aa6d6c
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21aa6d6c
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f446bef
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f446bef
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1c80e49b
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1c80e49b
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@293d0107
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@293d0107
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@773f7880
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@773f7880
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6b54655f
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b54655f
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@165b2f7f
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@165b2f7f
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@165b2f7f
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2364305a
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e8f7922
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e8f7922
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e8f7922
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@376a312c
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@64df9a61
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@3fc9dfc5
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3fc9dfc5
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@58bf8650
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@58bf8650
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4e517165
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4e517165
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@427b5f92
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@427b5f92
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@419a20a6
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@419a20a6
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f27ea3
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@39dcf4b0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@39dcf4b0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@39dcf4b0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4c6daf0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4c6daf0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4c6daf0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1cd201a8
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@3276732
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@18245eb0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@18245eb0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@18245eb0
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4ae33a11
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4ae33a11
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4ae33a11
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@5049d8b2
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@34a75079
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@acb0951
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@acb0951
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28276e50
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@3185fa6b
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3185fa6b
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@545de5a4
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@545de5a4
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4648ce9
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76ba13c
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@68759011
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@649725e3
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@649725e3
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@fd0e5b6
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eed46ee
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@36b0fcd5
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fad94a7
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@475835b1
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6326d182
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5241cf67
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@716a7124
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:29:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:29:53 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:29:53 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:29:53 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:29:53 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:29:53 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:29:53 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:29:53 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:29:53 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:29:53 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:29:53 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:29:53 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:29:53 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2e3a5237
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2e3a5237
2021-04-06 09:29:53 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@419a20a6
2021-04-06 09:29:53 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b87581] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66434cc8]
2021-04-06 09:29:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:29:53 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:29:53 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:29:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:29:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:29:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:29:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:29:53 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:29:53 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:29:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:29:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:29:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:29:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:29:53 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:29:53 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:29:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:29:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:29:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:29:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:29:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:29:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:29:53 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:29:53 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:29:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:29:54 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:29:54 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:29:54 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:29:54 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:29:54 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:29:54 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:29:54 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:29:54 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:29:54 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:29:54 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:29:54 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:29:54 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:29:54 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:29:54 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:29:54 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:29:54 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:29:54 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:29:54 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:29:54 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:29:54 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:29:54 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:29:54 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:29:54 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:29:54 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:29:54 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:29:54 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:29:54 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:29:54 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:29:54 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:29:54 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:29:54 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:29:54 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:29:54 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:29:54 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:29:54 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:29:54 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:29:54 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:29:54 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:29:54 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:29:54 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:29:54 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:29:54 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:29:54 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:29:54 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@dab48d3, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:29:54 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:29:54 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:29:54 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b87581] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5176d279]
2021-04-06 09:29:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:29:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:29:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:29:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:29:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:29:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:29:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9eb03]
2021-04-06 09:29:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:29:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:29:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:29:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:29:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:29:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:29:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:29:54 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:29:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1386313f]
2021-04-06 09:29:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:29:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:29:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:29:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:29:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:29:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:29:54 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:29:54 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:29:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c6abb]
2021-04-06 09:29:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:29:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:29:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:29:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:29:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:29:54 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:29:54 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:29:54 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:29:54 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:29:54 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:29:54 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:29:54 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:29:54 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:29:54 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d408060
2021-04-06 09:29:54 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: b6eb5e80-e80e-4f76-9b4d-a742cdeb443b (<unnamed>)
2021-04-06 09:29:54 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:29:54 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@73809e7
2021-04-06 09:29:54 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:29:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:29:54 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:29:54 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:29:54 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:29:54 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:29:54 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:29:54 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:29:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:29:54 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:29:54 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:29:54 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:29:54 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:29:54 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:31:43 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:31:43 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:31:43 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:31:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:31:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:31:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:31:43 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:31:43 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:31:43 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:31:43 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:31:43 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:31:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:31:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:31:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:31:44 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:31:44 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:31:44 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:31:44 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:31:44 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5c3b6c6e
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5c3b6c6e
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5c3b6c6e
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@306851c7
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@354fc8f0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1080b026
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@5c87bfe2
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@5c87bfe2
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c87bfe2
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a791b66
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a791b66
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a791b66
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4fc5e095
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4fc5e095
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4fc5e095
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@62ea3440
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@62ea3440
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62ea3440
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@749c877b
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@749c877b
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@749c877b
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@160ac7fb
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@160ac7fb
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@160ac7fb
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@618c5d94
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@618c5d94
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@618c5d94
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@285c08c8
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@285c08c8
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ece4966
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ece4966
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@5b11a194
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5b11a194
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4721d212
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bff1903
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@f79a760
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f79a760
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@652a7737
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@652a7737
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6cbcf243
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6cbcf243
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3234f74e
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3234f74e
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@366ef90e
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@366ef90e
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21aa6d6c
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21aa6d6c
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f446bef
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f446bef
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1c80e49b
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1c80e49b
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@293d0107
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@293d0107
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@773f7880
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@773f7880
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6b54655f
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b54655f
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@165b2f7f
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@165b2f7f
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@165b2f7f
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2364305a
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e8f7922
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e8f7922
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e8f7922
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@376a312c
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@64df9a61
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@3fc9dfc5
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3fc9dfc5
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@58bf8650
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@58bf8650
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4e517165
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4e517165
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@427b5f92
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@427b5f92
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@419a20a6
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@419a20a6
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f27ea3
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@39dcf4b0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@39dcf4b0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@39dcf4b0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4c6daf0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4c6daf0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4c6daf0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1cd201a8
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@3276732
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@18245eb0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@18245eb0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@18245eb0
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4ae33a11
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4ae33a11
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4ae33a11
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@5049d8b2
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@34a75079
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@acb0951
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@acb0951
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28276e50
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@3185fa6b
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3185fa6b
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@545de5a4
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@545de5a4
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4648ce9
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76ba13c
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@68759011
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@649725e3
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@649725e3
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@fd0e5b6
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eed46ee
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@36b0fcd5
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fad94a7
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@475835b1
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6326d182
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5241cf67
2021-04-06 09:31:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@716a7124
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:31:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:31:44 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:31:44 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:31:44 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:31:44 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:31:44 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:31:44 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:31:45 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:31:45 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:31:45 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:31:45 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:31:45 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:31:45 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:31:45 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2e3a5237
2021-04-06 09:31:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2e3a5237
2021-04-06 09:31:45 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@419a20a6
2021-04-06 09:31:45 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b87581] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66434cc8]
2021-04-06 09:31:45 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:31:45 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:31:45 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:31:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:31:45 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:31:45 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:31:45 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:31:45 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:31:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:31:45 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:31:45 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:31:45 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:31:45 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:31:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:31:45 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:31:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:31:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:31:45 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:31:45 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:31:45 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:31:45 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:31:45 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:31:45 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:31:45 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:31:45 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:31:45 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:31:45 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:31:45 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:31:45 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:31:45 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:31:45 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:31:45 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:31:45 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:31:45 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:31:45 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:31:45 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:31:45 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:31:45 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:31:45 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:31:45 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:31:45 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:31:45 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:31:45 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:31:45 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:31:45 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:31:45 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:31:45 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:31:45 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:31:45 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:31:45 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:31:45 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:31:45 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:31:45 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:31:45 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:31:45 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:31:45 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:31:45 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:31:45 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:31:45 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:31:45 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:31:45 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:31:45 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:31:45 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:31:45 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@dab48d3, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:31:45 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:31:45 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:31:45 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b87581] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5176d279]
2021-04-06 09:31:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:31:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:31:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:31:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:31:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:31:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:31:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9eb03]
2021-04-06 09:31:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:31:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:31:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:31:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:31:46 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:31:46 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:31:46 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:31:46 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:31:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1386313f]
2021-04-06 09:31:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:31:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:31:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:31:46 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:31:46 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:31:46 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:31:46 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:31:46 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:31:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c6abb]
2021-04-06 09:31:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:31:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:31:46 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:31:46 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:31:46 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:31:46 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:31:46 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:31:46 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:31:46 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:31:46 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:31:46 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:31:46 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:31:46 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:31:46 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d408060
2021-04-06 09:31:46 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 1b6b8d5a-e2b9-48d7-b335-7c91a726d7cf (<unnamed>)
2021-04-06 09:31:46 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:31:46 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@73809e7
2021-04-06 09:31:46 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:31:46 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:31:46 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:31:46 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:31:46 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:46 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:31:46 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:31:55 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:31:55 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:31:55 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:31:55 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:31:55 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:31:55 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:31:55 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:31:55 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:31:55 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:31:55 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:31:55 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:31:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:31:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:31:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:31:56 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:31:56 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:31:56 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:31:56 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:31:56 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63a5e46c
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6bd51ed8
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4d4d48a6
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24528a25
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24528a25
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ee39da0
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ee39da0
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3b718392
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b718392
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee55e70
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126be319
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31198ceb
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31198ceb
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1db0ec27
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1db0ec27
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@62df0ff3
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@62df0ff3
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c5204af
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c5204af
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@71b1a49c
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@71b1a49c
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3b809711
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3b809711
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a415aa9
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a415aa9
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2392212b
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2392212b
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@669d2b1b
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@669d2b1b
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@2b50150
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b50150
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@64a1923a
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64a1923a
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e681bc
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a68df9
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@169da7f2
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2ba45490
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ba45490
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@36c54a56
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36c54a56
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@68ace111
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68ace111
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5eefa415
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5eefa415
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@718607eb
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@456abb66
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31be6b49
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6826c41e
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@437ebf59
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@71154f21
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71154f21
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6bfdb014
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@240139e1
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@240139e1
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3dedb4a6
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3dedb4a6
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49d98dc5
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@bf71cec
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@5e8a459
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@21ae6e73
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21ae6e73
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64a896b0
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e044b4a
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11a82d0f
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1adb7478
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ae66c85
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@16943e88
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4604b900
2021-04-06 09:31:56 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@73d6d0c
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:31:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:31:56 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:31:56 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:31:56 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:31:56 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:31:56 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:31:56 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:31:57 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:31:57 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:31:57 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:31:57 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:31:57 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:31:57 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:31:57 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@442f92e6
2021-04-06 09:31:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@442f92e6
2021-04-06 09:31:57 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:31:57 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a0cbc6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67110f71]
2021-04-06 09:31:57 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:31:57 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:31:57 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:31:57 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:31:57 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:31:57 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:31:57 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:31:57 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:31:57 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:31:57 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:31:57 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:31:57 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:31:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:31:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:31:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:31:57 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:31:57 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:31:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:31:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:31:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:31:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:31:57 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:31:57 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:31:57 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:31:57 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:31:57 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:31:57 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:31:57 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:31:57 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:31:57 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:31:57 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:31:57 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:31:57 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:31:57 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:31:57 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:31:57 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:31:57 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:31:57 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:31:57 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:31:57 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:31:57 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:31:57 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:31:57 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:31:57 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:31:57 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:31:57 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:31:57 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:31:57 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:31:57 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:31:57 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:31:57 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:31:57 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:31:57 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:31:57 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:31:57 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:31:57 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:31:57 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:31:57 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:31:57 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:31:57 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:31:57 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:31:57 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest,clientDataIsNotEmpty, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6d1dcdff, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:31:57 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:31:57 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:31:57 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a0cbc6f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2f1d0bbc]
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:31:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:31:57 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:31:57 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:31:57 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:31:57 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:31:57 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:31:57 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:31:57 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:31:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b47731f]
2021-04-06 09:31:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:31:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:31:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:31:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:31:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:31:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:31:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:31:58 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:31:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c622a7]
2021-04-06 09:31:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:31:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:31:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:31:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:31:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:31:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:31:58 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:31:58 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:31:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e3b45b]
2021-04-06 09:31:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:31:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:31:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:31:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:31:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:31:58 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:31:58 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:31:58 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:31:58 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:31:58 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:31:58 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:31:58 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:31:58 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:31:58 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef2ab73
2021-04-06 09:31:58 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: c2bce9b1-c6bf-45b7-b259-04c067f3eabc (<unnamed>)
2021-04-06 09:31:58 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:31:58 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@71370fec
2021-04-06 09:31:58 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:31:58 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:31:58 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:31:58 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:31:58 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:31:58 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:31:58 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:31:58 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:31:58 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:31:58 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:31:58 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:31:58 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:31:58 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:31:58 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:31:58 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:31:58 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:31:58 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:31:58 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:31:58 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:31:58 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:31:58 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:38:04 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:38:04 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:38:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:38:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:38:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:38:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:38:05 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:38:05 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:38:05 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:38:05 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:38:05 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:38:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:38:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:38:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:38:05 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:38:05 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:38:05 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:38:05 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:38:05 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63a5e46c
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6bd51ed8
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4d4d48a6
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24528a25
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24528a25
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ee39da0
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ee39da0
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3b718392
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b718392
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee55e70
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126be319
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31198ceb
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31198ceb
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1db0ec27
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1db0ec27
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@62df0ff3
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@62df0ff3
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c5204af
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c5204af
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@71b1a49c
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@71b1a49c
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3b809711
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3b809711
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a415aa9
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a415aa9
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2392212b
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2392212b
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@669d2b1b
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@669d2b1b
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@2b50150
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b50150
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@64a1923a
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64a1923a
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e681bc
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a68df9
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@169da7f2
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2ba45490
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ba45490
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@36c54a56
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36c54a56
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@68ace111
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68ace111
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5eefa415
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5eefa415
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@718607eb
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:38:05 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@456abb66
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31be6b49
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6826c41e
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@437ebf59
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@71154f21
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71154f21
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6bfdb014
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@240139e1
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@240139e1
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3dedb4a6
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3dedb4a6
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49d98dc5
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@bf71cec
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@5e8a459
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@21ae6e73
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21ae6e73
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64a896b0
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e044b4a
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11a82d0f
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1adb7478
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ae66c85
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@16943e88
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4604b900
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@73d6d0c
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:38:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:38:06 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:38:06 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:38:06 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:38:06 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:38:06 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:38:06 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:38:06 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:38:06 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:38:06 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:38:06 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:38:06 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:38:06 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62566842
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@62566842
2021-04-06 09:38:06 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:38:06 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d070ef5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a55f148]
2021-04-06 09:38:06 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:38:06 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:38:06 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:38:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:38:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:38:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:38:06 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:38:06 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:38:06 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:38:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:38:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:38:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:38:06 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:38:06 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:38:06 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:38:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:38:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:38:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:38:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:38:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:38:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:38:06 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:38:06 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:38:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:38:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:38:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:38:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:38:06 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:38:06 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:38:06 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:38:06 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:38:06 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:38:06 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:38:06 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:38:06 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:38:06 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:38:06 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:38:06 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:38:06 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:38:06 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:38:06 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:38:06 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:38:06 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:38:06 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:38:06 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:38:06 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:38:06 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:38:06 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:38:06 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:38:06 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:38:06 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:38:06 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:38:06 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:38:06 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:38:06 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:38:06 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:38:06 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:38:06 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:38:06 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:38:06 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:38:06 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:38:06 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:38:06 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:38:06 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:38:06 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:38:06 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:38:06 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:38:06 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest,clientDataIsNotEmpty, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4fc3c165, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:38:06 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:38:06 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:38:06 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d070ef5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3dffc764]
2021-04-06 09:38:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:38:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:38:07 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:38:07 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:38:07 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:38:07 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:38:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4debbf0]
2021-04-06 09:38:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:38:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:38:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:38:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:38:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:38:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:38:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:38:07 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:38:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448b808a]
2021-04-06 09:38:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:38:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:38:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:38:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:38:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:38:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:38:07 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:38:07 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:38:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e190ed]
2021-04-06 09:38:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:38:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:38:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:38:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:38:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:38:07 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:38:07 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:38:07 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:38:07 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:38:07 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:38:07 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:38:07 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:38:07 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:38:07 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3290b1a6
2021-04-06 09:38:07 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 5e0241b7-e4ac-4d81-a9f1-b5d5974d725c (<unnamed>)
2021-04-06 09:38:07 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:38:07 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@250b5e5b
2021-04-06 09:38:07 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:38:07 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:38:07 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:38:07 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:38:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:38:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:38:07 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:38:07 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:38:07 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:38:07 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:38:07 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:38:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:38:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:38:07 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:38:07 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:38:07 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:38:07 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:38:07 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:38:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:38:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:38:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:46:03 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:46:03 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:46:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:46:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:46:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:46:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:46:03 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:46:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:46:03 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:46:03 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:46:03 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:46:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:46:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:46:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:46:03 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:46:03 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:46:03 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:46:03 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:46:04 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b69fd74
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63a5e46c
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6bd51ed8
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4d4d48a6
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4201a617
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a34b7b8
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@85ec632
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1c4ee95c
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@35e52059
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e5bfdfc
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2fb68ec6
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24528a25
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24528a25
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ee39da0
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ee39da0
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3b718392
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b718392
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee55e70
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126be319
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31198ceb
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31198ceb
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1db0ec27
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1db0ec27
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@62df0ff3
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@62df0ff3
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c5204af
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c5204af
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@71b1a49c
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@71b1a49c
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3b809711
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3b809711
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a415aa9
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a415aa9
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2392212b
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2392212b
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@669d2b1b
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@669d2b1b
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@2b50150
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b50150
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@64a1923a
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64a1923a
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@88a8218
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e681bc
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e053511
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a68df9
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@169da7f2
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2ba45490
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ba45490
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@36c54a56
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36c54a56
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@68ace111
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68ace111
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5eefa415
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5eefa415
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@718607eb
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@55b62629
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@867ba60
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@456abb66
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31be6b49
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@408613cc
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@771158fb
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6826c41e
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@437ebf59
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@71154f21
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71154f21
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6bfdb014
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@240139e1
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@240139e1
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3dedb4a6
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3dedb4a6
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49d98dc5
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@bf71cec
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@5e8a459
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@21ae6e73
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21ae6e73
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64a896b0
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e044b4a
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11a82d0f
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1adb7478
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ae66c85
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@16943e88
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4604b900
2021-04-06 09:46:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@73d6d0c
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:46:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:46:04 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:46:04 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:46:04 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:46:04 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:46:04 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:46:04 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:46:04 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:46:04 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:46:04 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:46:04 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:46:04 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:46:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:46:05 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62566842
2021-04-06 09:46:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@62566842
2021-04-06 09:46:05 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@344b8190
2021-04-06 09:46:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d070ef5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a55f148]
2021-04-06 09:46:05 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:46:05 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:46:05 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:46:05 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:46:05 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:46:05 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:46:05 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:46:05 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:46:05 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:46:05 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:46:05 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:46:05 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:46:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:46:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:46:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:46:05 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:46:05 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:46:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:46:05 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:46:05 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:46:05 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:46:05 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:46:05 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:46:05 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:46:05 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:46:05 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:46:05 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:46:05 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:46:05 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:46:05 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:46:05 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:46:05 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:46:05 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:46:05 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:46:05 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:46:05 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:46:05 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:46:05 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:46:05 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:46:05 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:46:05 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:46:05 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:46:05 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:46:05 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:46:05 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:46:05 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:46:05 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:46:05 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:46:05 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:46:05 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:46:05 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:46:05 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:46:05 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:46:05 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:46:05 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:46:05 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:46:05 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:46:05 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:46:05 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:46:05 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:46:05 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:46:05 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest,clientDataIsNotEmpty, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4fc3c165, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:46:05 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:46:05 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:46:05 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d070ef5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3dffc764]
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:46:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:46:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4debbf0]
2021-04-06 09:46:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:46:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:46:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:46:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:46:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:46:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:46:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:46:05 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:46:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448b808a]
2021-04-06 09:46:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:46:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:46:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:46:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:46:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:46:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:46:05 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:46:05 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:46:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e190ed]
2021-04-06 09:46:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:46:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:46:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:46:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:46:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:46:05 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:46:05 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:46:05 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:46:05 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:46:05 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:46:05 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:46:05 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:46:05 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:46:05 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3290b1a6
2021-04-06 09:46:05 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: a2bc15da-b875-45e8-a2a1-77fe8acf7ac5 (<unnamed>)
2021-04-06 09:46:05 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:46:05 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@250b5e5b
2021-04-06 09:46:05 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:46:05 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:46:05 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:46:05 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:46:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:46:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:46:05 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:46:05 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:46:05 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:46:05 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:46:05 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:46:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:46:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:46:05 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:46:05 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:46:05 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:46:05 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:46:05 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:46:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:46:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:46:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:49:44 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:49:44 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:49:44 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:49:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:49:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:49:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:49:44 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:49:44 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:49:45 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:49:45 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:49:45 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:49:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:49:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:49:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:49:45 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:49:45 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:49:45 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:49:45 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:49:45 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12bcd0c0
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41813449
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@58ebfd03
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2fea7088
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2fea7088
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2fea7088
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@6f2cb653
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@6f2cb653
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f2cb653
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@435871cb
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@435871cb
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@435871cb
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@27953a83
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@27953a83
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27953a83
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@efde75f
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@efde75f
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@efde75f
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@12bfd80d
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@12bfd80d
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@12bfd80d
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@295eaa7c
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@295eaa7c
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1dd0e7c4
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1dd0e7c4
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@37bd68c3
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37bd68c3
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1b065145
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@62dae540
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@14f5da2c
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14f5da2c
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@5b7ea70d
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5b7ea70d
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@29e6eb25
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@29e6eb25
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bc10d84
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bc10d84
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33e01298
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33e01298
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b968a76
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b968a76
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7829b776
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7829b776
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@458342d3
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@458342d3
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2692b61e
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2692b61e
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@878452d
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@878452d
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@665e9289
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@665e9289
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5536379e
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5536379e
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5536379e
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@470a696f
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@63192798
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63192798
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63192798
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28d6290
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@77602954
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@40258c2f
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40258c2f
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@73c60324
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73c60324
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44e3760b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44e3760b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@24bdb479
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@24bdb479
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@533377b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@533377b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ce61929
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@6e4de19b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e4de19b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@6e4de19b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7db82169
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@3f28bd56
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6d0b5baf
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@346a361
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@5bf22f18
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5bf22f18
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62e70ea3
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6d366c9b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d366c9b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@29ef6856
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@29ef6856
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@569bf9eb
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@eb6449b
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7e242b4d
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@3c0fae6c
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3c0fae6c
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eed46ee
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36b0fcd5
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fad94a7
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@475835b1
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6326d182
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5241cf67
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@716a7124
2021-04-06 09:49:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77192705
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:49:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:49:45 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:49:45 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:49:45 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:49:45 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:49:45 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:49:45 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:49:46 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:49:46 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:49:46 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:49:46 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:49:46 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:49:46 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:49:46 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6a84bc2a
2021-04-06 09:49:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6a84bc2a
2021-04-06 09:49:46 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@533377b
2021-04-06 09:49:46 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e9803c2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4525d1d3]
2021-04-06 09:49:46 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:49:46 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:49:46 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:49:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:49:46 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:49:46 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:49:46 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:49:46 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:49:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:49:46 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:49:46 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:49:46 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:49:46 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:49:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:49:46 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:49:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:49:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:49:46 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:49:46 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:49:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:49:46 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:49:46 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:49:46 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:49:46 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:49:46 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:49:46 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:49:46 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:49:46 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:49:46 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:49:46 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:49:46 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:49:46 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:49:46 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:49:46 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:49:46 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:49:46 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:49:46 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:49:46 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:49:46 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:49:46 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:49:46 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:49:46 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:49:46 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:49:46 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:49:46 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:49:46 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:49:46 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:49:46 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:49:46 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:49:46 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:49:46 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:49:46 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:49:46 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:49:46 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:49:46 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:49:46 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:49:46 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:49:46 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:49:46 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:49:46 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:49:46 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:49:46 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:49:46 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:49:46 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@48cd9a2c, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:49:46 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:49:46 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:49:46 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e9803c2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@27ace0b1]
2021-04-06 09:49:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:49:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:49:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:49:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:49:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:49:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:49:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ce792e]
2021-04-06 09:49:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:49:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:49:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:49:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:49:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:49:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:49:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:49:47 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:49:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@459b6c53]
2021-04-06 09:49:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:49:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:49:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:49:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:49:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:49:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:49:47 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:49:47 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:49:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@490c7a83]
2021-04-06 09:49:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:49:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:49:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:49:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:49:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:49:47 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:49:47 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:49:47 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:49:47 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:49:47 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:49:47 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:49:47 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:49:47 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:49:47 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f8aba08
2021-04-06 09:49:47 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 46f33d6b-ef79-435b-9ee8-dbc9bca803fd (<unnamed>)
2021-04-06 09:49:47 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:49:47 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@45f756e6
2021-04-06 09:49:47 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:49:47 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:49:47 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:49:47 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:49:47 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:49:47 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:49:47 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:49:57 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:49:57 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:49:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:49:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:49:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:49:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:49:57 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:49:57 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:49:57 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:49:57 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:49:57 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:49:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:49:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:49:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:49:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:49:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:49:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:49:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:49:58 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4fbda97b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12bcd0c0
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41813449
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@58ebfd03
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2fea7088
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2fea7088
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2fea7088
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@6f2cb653
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@6f2cb653
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f2cb653
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@435871cb
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@435871cb
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@435871cb
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@27953a83
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@27953a83
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27953a83
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@efde75f
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@efde75f
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@efde75f
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@12bfd80d
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@12bfd80d
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@12bfd80d
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5b40ceb
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@295eaa7c
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@295eaa7c
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1dd0e7c4
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1dd0e7c4
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@37bd68c3
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@37bd68c3
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1b065145
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@62dae540
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@14f5da2c
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14f5da2c
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@5b7ea70d
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5b7ea70d
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@29e6eb25
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@29e6eb25
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bc10d84
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7bc10d84
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@33e01298
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@33e01298
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b968a76
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b968a76
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7829b776
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7829b776
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@458342d3
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@458342d3
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2692b61e
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2692b61e
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@878452d
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@878452d
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@665e9289
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@665e9289
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5536379e
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5536379e
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5536379e
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@470a696f
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@63192798
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63192798
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63192798
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28d6290
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@77602954
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@40258c2f
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40258c2f
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@73c60324
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73c60324
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44e3760b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44e3760b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@24bdb479
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@24bdb479
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@533377b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@533377b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ce61929
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@6e4de19b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e4de19b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@6e4de19b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10650953
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7db82169
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@3f28bd56
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@7c7d3c46
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a48e6e2
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6d0b5baf
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@346a361
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@5bf22f18
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5bf22f18
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62e70ea3
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6d366c9b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d366c9b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@29ef6856
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@29ef6856
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@569bf9eb
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@eb6449b
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7e242b4d
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@3c0fae6c
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3c0fae6c
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4eed46ee
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36b0fcd5
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fad94a7
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@475835b1
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6326d182
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5241cf67
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@716a7124
2021-04-06 09:49:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77192705
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:49:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:49:58 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:49:58 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:49:58 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:49:58 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:49:58 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:49:58 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:49:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:49:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:49:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:49:58 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:49:58 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:49:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:49:59 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2d0bfb24
2021-04-06 09:49:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2d0bfb24
2021-04-06 09:49:59 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@533377b
2021-04-06 09:49:59 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5432050b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75f2099]
2021-04-06 09:49:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:49:59 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:49:59 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:49:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:49:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:49:59 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:49:59 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:49:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:49:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:49:59 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:49:59 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:49:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:49:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:49:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:49:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:49:59 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:49:59 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:49:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:49:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:49:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:49:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:49:59 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:49:59 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:49:59 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:49:59 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:49:59 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:49:59 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:49:59 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:49:59 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:49:59 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:49:59 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:49:59 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:49:59 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:49:59 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:49:59 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:49:59 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:49:59 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:49:59 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:49:59 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:49:59 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:49:59 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:49:59 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:49:59 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:49:59 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:49:59 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:49:59 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:49:59 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:49:59 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:49:59 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:49:59 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:49:59 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:49:59 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:49:59 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:49:59 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:49:59 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:49:59 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:49:59 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:49:59 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:49:59 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:49:59 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:49:59 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:49:59 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4ca8dbfa, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:49:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:49:59 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:49:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5432050b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@74aa9c72]
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:49:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:49:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a87026]
2021-04-06 09:49:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:49:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:49:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:49:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:49:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:49:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:49:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:49:59 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:49:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45cd7bc5]
2021-04-06 09:49:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:49:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:49:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:49:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:49:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:49:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:49:59 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:49:59 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:49:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35e26d05]
2021-04-06 09:49:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:49:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:49:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:49:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:49:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:49:59 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:49:59 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:49:59 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:49:59 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:49:59 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:49:59 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:49:59 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:49:59 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:49:59 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@79518e00
2021-04-06 09:49:59 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: f18649fa-b7f5-42b9-b062-9c7f771d6127 (<unnamed>)
2021-04-06 09:49:59 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:49:59 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@67507df
2021-04-06 09:49:59 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:49:59 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:49:59 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:49:59 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:49:59 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:49:59 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:49:59 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:53:46 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:53:46 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:53:46 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:53:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:53:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:53:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:53:46 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:53:46 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:53:46 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:53:46 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:53:46 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:53:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:53:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:53:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:53:46 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:53:46 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:53:46 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:53:46 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:53:46 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5f577419
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5f577419
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f577419
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6a175569
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4102b1b1
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f325091
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@61e3a1fd
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@61e3a1fd
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61e3a1fd
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7b02e036
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7b02e036
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7b02e036
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@420bc288
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@420bc288
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@420bc288
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@64b31700
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@64b31700
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64b31700
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fd9b663
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fd9b663
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fd9b663
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6548bb7d
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6548bb7d
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6548bb7d
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6b5f8707
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6b5f8707
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b5f8707
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51bde877
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51bde877
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1a1d3c1a
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1a1d3c1a
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@6ac4944a
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6ac4944a
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3ee39da0
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c0b41d6
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@7ee55e70
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ee55e70
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@530a8454
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@530a8454
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5bf61e67
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5bf61e67
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@51671b08
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@51671b08
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@26f3d90c
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@26f3d90c
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6c2d4cc6
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6c2d4cc6
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2472c7d8
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2472c7d8
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5c84624f
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5c84624f
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@66f66866
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@66f66866
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@669d2b1b
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@669d2b1b
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@5ab9b447
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ab9b447
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@328572f0
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@328572f0
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@328572f0
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d2a6eac
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@50b1f030
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50b1f030
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50b1f030
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@23aae55
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@60222fd8
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2f6bbeb0
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f6bbeb0
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@60297f36
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@60297f36
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7af707e0
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7af707e0
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@73386d72
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73386d72
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fbb001b
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fbb001b
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5eefa415
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@6a078481
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6a078481
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@6a078481
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@676f0a60
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@676f0a60
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@676f0a60
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@6759f091
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@867ba60
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@456abb66
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@456abb66
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@456abb66
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@70d8de
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@70d8de
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@70d8de
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@408613cc
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@13cda7c9
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@1d269ed7
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d269ed7
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d691f3d
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@304a9d7b
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@304a9d7b
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@1d8e2eea
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d8e2eea
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@253c1256
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@109f5dd8
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@ec50f54
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@55caeb35
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55caeb35
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@76304b46
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2fa3be26
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4287d447
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3af37506
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e6d7365
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c0da600
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d4602a
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@21ae6e73
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:53:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:53:47 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:53:47 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:53:47 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:53:47 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:53:47 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:53:47 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:53:47 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:53:47 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:53:47 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:53:47 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:53:47 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:53:47 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@309028af
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@309028af
2021-04-06 09:53:47 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4fbb001b
2021-04-06 09:53:47 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f1a45f8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5edf2821]
2021-04-06 09:53:47 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:53:47 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:53:47 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:53:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:53:47 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:53:47 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:53:47 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:53:47 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:53:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:53:47 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:53:47 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:53:47 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:53:47 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:53:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:53:47 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:53:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:53:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:53:47 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:53:47 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:53:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:53:47 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:53:47 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:53:47 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:53:47 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:53:47 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:53:47 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:53:47 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:53:47 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:53:47 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:53:47 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:53:47 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:53:47 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:53:47 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:53:47 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:53:47 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:53:47 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:53:47 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:53:47 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:53:47 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:53:47 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:53:47 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:53:47 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:53:47 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:53:47 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:53:47 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:53:47 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:53:47 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:53:47 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:53:47 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:53:47 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:53:47 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:53:47 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:53:47 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:53:47 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:53:47 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:53:47 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:53:47 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:53:47 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:53:47 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:53:47 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:53:47 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:53:47 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:53:47 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:53:47 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest,clientDataIsNotEmpty, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@23b8d9f3, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:53:47 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:53:47 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:53:47 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f1a45f8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5f7989fa]
2021-04-06 09:53:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:53:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:53:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:53:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:53:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:53:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:53:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32eae6f2]
2021-04-06 09:53:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:53:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:53:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:53:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:53:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:53:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:53:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:53:48 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:53:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8ffd75]
2021-04-06 09:53:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:53:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:53:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:53:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:53:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:53:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:53:48 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:53:48 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:53:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f9e8421]
2021-04-06 09:53:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:53:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:53:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:53:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:53:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:53:48 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:53:48 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:53:48 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:53:48 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:53:48 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:53:48 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:53:48 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:53:48 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:53:48 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@662e682a
2021-04-06 09:53:48 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: f85f84ce-280c-4839-b30e-e5a6ffaa6c6e (<unnamed>)
2021-04-06 09:53:48 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:53:48 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@6fcd31c3
2021-04-06 09:53:48 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:53:48 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:53:48 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:53:48 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:53:48 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:53:48 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:53:48 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 09:53:57 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 09:53:57 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 09:53:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 09:53:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:53:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:53:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:53:58 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 09:53:58 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 09:53:58 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 09:53:58 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 09:53:58 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 09:53:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 09:53:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 09:53:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 09:53:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 09:53:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 09:53:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 09:53:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 09:53:58 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@d71adc2
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@d71adc2
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d71adc2
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@159e366
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@59221b97
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@704b2127
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@3b718392
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@3b718392
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b718392
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@46292372
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@46292372
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46292372
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@36b6964d
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@36b6964d
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@36b6964d
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@5dda14d0
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@5dda14d0
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5dda14d0
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1ad777f
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1ad777f
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1ad777f
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6979efad
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6979efad
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6979efad
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@38d5b107
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@38d5b107
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38d5b107
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1af1347d
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1af1347d
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76b0ae1b
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76b0ae1b
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@5710768a
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5710768a
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@30272916
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b273a59
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@1162410a
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1162410a
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@515f4131
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@515f4131
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6bb7cce7
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6bb7cce7
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d2a6eac
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d2a6eac
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@88a8218
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@88a8218
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f574cc2
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f574cc2
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53bf7094
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53bf7094
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b1637e1
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b1637e1
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ecedf21
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ecedf21
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6df20ade
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6df20ade
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@2fb69ff6
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2fb69ff6
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@718607eb
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@718607eb
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@718607eb
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@676f0a60
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@33a053d
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33a053d
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33a053d
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@654b72c0
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7da10b5b
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@595f4da5
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@595f4da5
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@5aa6202e
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5aa6202e
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3003697
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3003697
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@1bdbf9be
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bdbf9be
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15f193b8
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15f193b8
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@72889280
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@1d8e2eea
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d8e2eea
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@1d8e2eea
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55f45b92
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55f45b92
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55f45b92
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@194152cf
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@ec50f54
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@6c000e0c
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c000e0c
2021-04-06 09:53:58 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@6c000e0c
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@9ec531
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@9ec531
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@9ec531
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6f95cd51
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@2c383e33
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@47dd778
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47dd778
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e044b4a
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@367795c7
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@367795c7
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@cd7f1ae
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@cd7f1ae
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3569edd5
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c827db
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ce93c18
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@6f815e7f
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6f815e7f
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@107e5441
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4aeaadc1
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@263558c9
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f14f20c
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7daa61f3
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62315f22
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e4ea0bd
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56f2bbea
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 09:53:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 09:53:59 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 09:53:59 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 09:53:59 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 09:53:59 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 09:53:59 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 09:53:59 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 09:53:59 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 09:53:59 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 09:53:59 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 09:53:59 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 09:53:59 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 09:53:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4ad3d266
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4ad3d266
2021-04-06 09:53:59 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@15f193b8
2021-04-06 09:53:59 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@167279d1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@138caeca]
2021-04-06 09:53:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:53:59 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 09:53:59 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:53:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:53:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property about
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property email
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property name
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 09:53:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:53:59 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 09:53:59 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:53:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:53:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property number
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property value
2021-04-06 09:53:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 09:53:59 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 09:53:59 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:53:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property id
2021-04-06 09:53:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 09:53:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 09:53:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 09:53:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 09:53:59 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 09:53:59 DEBUG PropertyBinder:266 - Building property description
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 09:53:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 09:53:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 09:53:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 09:53:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 09:53:59 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 09:53:59 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 09:53:59 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 09:53:59 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 09:53:59 DEBUG Settings:72 - Statistics: disabled
2021-04-06 09:53:59 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 09:53:59 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 09:53:59 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 09:53:59 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 09:53:59 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 09:53:59 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 09:53:59 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 09:53:59 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 09:53:59 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 09:53:59 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 09:53:59 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 09:53:59 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 09:53:59 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 09:53:59 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 09:53:59 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 09:53:59 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 09:53:59 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 09:53:59 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 09:53:59 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 09:53:59 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 09:53:59 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 09:53:59 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 09:53:59 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 09:53:59 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 09:53:59 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 09:53:59 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 09:53:59 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 09:53:59 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 09:53:59 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 09:53:59 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 09:53:59 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 09:53:59 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 09:53:59 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 09:53:59 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 09:53:59 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 09:53:59 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest,clientDataIsNotEmpty, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5f7989fa, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 09:53:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 09:53:59 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 09:53:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@167279d1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6c3659be]
2021-04-06 09:53:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 09:53:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 09:54:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 09:54:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 09:54:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 09:54:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 09:54:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e5d243]
2021-04-06 09:54:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 09:54:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 09:54:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 09:54:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 09:54:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:54:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:54:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 09:54:00 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 09:54:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294aba23]
2021-04-06 09:54:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 09:54:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 09:54:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 09:54:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:54:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:54:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 09:54:00 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 09:54:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 09:54:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d3b58ca]
2021-04-06 09:54:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 09:54:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 09:54:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 09:54:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 09:54:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 09:54:00 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 09:54:00 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 09:54:00 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 09:54:00 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 09:54:00 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:54:00 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 09:54:00 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 09:54:00 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 09:54:00 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@57efc6fd
2021-04-06 09:54:00 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: f0f5fcbc-a2f8-4d38-b26a-19c1e1e5ca5e (<unnamed>)
2021-04-06 09:54:00 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 09:54:00 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@5fcd1c5f
2021-04-06 09:54:00 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 09:54:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 09:54:00 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 09:54:00 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 09:54:00 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 09:54:00 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 09:54:00 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 14:02:33 DEBUG AccountService:27 - account.findById {id = 1}
2021-04-06 14:02:33 DEBUG AccountDao:44 - account.findById {id = 1}
2021-04-06 14:02:33 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 14:02:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 14:02:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 14:02:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 14:02:34 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 14:02:34 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 14:02:36 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 14:02:36 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 14:02:36 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 14:02:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 14:02:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 14:02:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 14:02:36 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 14:02:36 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 14:02:36 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 14:02:36 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 14:02:36 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3aaf4f07
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3aaf4f07
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3aaf4f07
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a38ba58
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1deb2c43
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6f6a7463
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6754ef00
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6754ef00
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6754ef00
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@24b52d3e
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@24b52d3e
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@24b52d3e
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@47a64f7d
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@47a64f7d
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@47a64f7d
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@70f43b45
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@70f43b45
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70f43b45
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e792ce3
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e792ce3
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e792ce3
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1968a49c
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1968a49c
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1968a49c
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6b739528
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6b739528
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b739528
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6a175569
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6a175569
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b69fd74
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b69fd74
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@271f18d3
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@271f18d3
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@eadb475
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5cad8b7d
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@1bb9aa43
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1bb9aa43
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@3be8821f
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3be8821f
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@7ee55e70
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7ee55e70
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@530a8454
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@530a8454
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7726e185
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7726e185
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3b4ef7
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3b4ef7
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fdf8f12
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fdf8f12
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@17f9344b
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@17f9344b
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8823d2
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8823d2
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6e0d4a8
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e0d4a8
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@251ebf23
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@251ebf23
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@61019f59
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61019f59
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61019f59
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@515f4131
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@777c9dc9
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@777c9dc9
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@777c9dc9
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@589b028e
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@63034ed1
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@420745d7
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@420745d7
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@66f66866
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66f66866
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@79c3f01f
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@79c3f01f
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5d52e3ef
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d52e3ef
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f8caaf3
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f8caaf3
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41c62850
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@2c0f7678
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2c0f7678
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@2c0f7678
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4163f1cd
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4163f1cd
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4163f1cd
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7a9c84a5
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@60222fd8
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f6bbeb0
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f6bbeb0
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f6bbeb0
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60297f36
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60297f36
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60297f36
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@2ba45490
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@737edcfa
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@68ace111
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@68ace111
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4010d494
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@344b8190
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@344b8190
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@535b8c24
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@535b8c24
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e63cad
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@20921b9b
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7da10b5b
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@6826c41e
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6826c41e
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@437ebf59
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41c89d2f
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@410e94e
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2d691f3d
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1bdbf9be
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e7f2e0f
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1da6ee17
2021-04-06 14:02:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@78d39a69
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 14:02:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 14:02:37 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 14:02:37 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 14:02:37 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 14:02:37 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 14:02:37 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 14:02:37 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 14:02:37 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 14:02:37 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 14:02:37 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 14:02:37 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 14:02:37 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 14:02:38 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 14:02:38 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4cb0a000
2021-04-06 14:02:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4cb0a000
2021-04-06 14:02:38 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f8caaf3
2021-04-06 14:02:38 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5bcb04cb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@385e36d4]
2021-04-06 14:02:38 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:02:38 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 14:02:38 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:02:38 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property about
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property email
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property name
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 14:02:38 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:02:38 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 14:02:38 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:02:38 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property number
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property value
2021-04-06 14:02:38 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:02:38 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 14:02:38 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:02:38 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 14:02:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 14:02:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 14:02:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 14:02:38 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 14:02:38 DEBUG PropertyBinder:266 - Building property description
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 14:02:38 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 14:02:38 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 14:02:38 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 14:02:38 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 14:02:38 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 14:02:38 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 14:02:38 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 14:02:38 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 14:02:38 DEBUG Settings:72 - Statistics: disabled
2021-04-06 14:02:38 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 14:02:38 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 14:02:38 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 14:02:38 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 14:02:38 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 14:02:38 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 14:02:38 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 14:02:38 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 14:02:38 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 14:02:38 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 14:02:38 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 14:02:38 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 14:02:38 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 14:02:38 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 14:02:38 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 14:02:38 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 14:02:38 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 14:02:38 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 14:02:38 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 14:02:38 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 14:02:38 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 14:02:38 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 14:02:38 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 14:02:38 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 14:02:38 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 14:02:38 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 14:02:38 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 14:02:38 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 14:02:38 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 14:02:38 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 14:02:38 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 14:02:38 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 14:02:38 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 14:02:38 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 14:02:38 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 14:02:38 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6eb17ec8, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 14:02:38 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 14:02:38 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 14:02:38 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5bcb04cb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@227a47]
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 14:02:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 14:02:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7235f92b]
2021-04-06 14:02:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 14:02:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 14:02:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 14:02:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 14:02:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:02:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:02:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 14:02:38 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 14:02:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@659f226a]
2021-04-06 14:02:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 14:02:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 14:02:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 14:02:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:02:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:02:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 14:02:38 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 14:02:38 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 14:02:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32ec9c90]
2021-04-06 14:02:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 14:02:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 14:02:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:02:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:02:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 14:02:38 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 14:02:38 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 14:02:38 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 14:02:38 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 14:02:38 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 14:02:38 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 14:02:38 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 14:02:38 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 14:02:38 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e1b374c
2021-04-06 14:02:38 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 6a239209-a38d-4052-bfc0-4ecfaacfea57 (<unnamed>)
2021-04-06 14:02:38 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 14:02:38 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@48a2db72
2021-04-06 14:02:38 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 14:02:38 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:02:38 DEBUG SessionImpl:1000 - Initializing proxy: [model.Account#1]
2021-04-06 14:02:38 DEBUG SQL:144 - select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 14:02:39 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Account#1]
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:211 - Processing attribute `client_id` : value = 1
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:242 - Attribute (`client_id`)  - enhanced for lazy-loading? - false
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:211 - Processing attribute `number` : value = UA11111111
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:242 - Attribute (`number`)  - enhanced for lazy-loading? - false
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:211 - Processing attribute `value` : value = 950.5
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:242 - Attribute (`value`)  - enhanced for lazy-loading? - false
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Account#1]
2021-04-06 14:02:39 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Account#1
2021-04-06 14:02:39 DEBUG StatusService:28 - status.findByID {id = 1}
2021-04-06 14:02:39 DEBUG StatusDao:45 - status.findByID {id = 1}
2021-04-06 14:02:39 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:02:39 DEBUG SessionImpl:1000 - Initializing proxy: [model.Status#1]
2021-04-06 14:02:39 DEBUG SQL:144 - select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 14:02:39 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Status#1]
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:211 - Processing attribute `alias` : value = STANDARD
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:242 - Attribute (`alias`)  - enhanced for lazy-loading? - false
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = For regular user
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Status#1]
2021-04-06 14:02:39 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Status#1
2021-04-06 14:02:39 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 14:02:39 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 14:02:39 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:02:39 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 14:02:39 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 14:02:39 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 14:02:39 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 14:02:39 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 14:28:57 DEBUG AccountService:17 - Account(id=0, client_id=0, number=null, value=0.0)
2021-04-06 14:28:57 DEBUG AccountDao:24 - Account(id=0, client_id=0, number=null, value=0.0)
2021-04-06 14:28:58 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 14:28:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 14:28:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 14:28:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 14:28:58 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 14:28:58 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 14:28:58 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 14:28:58 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 14:28:58 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 14:28:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 14:28:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 14:28:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 14:28:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 14:28:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 14:28:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 14:28:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 14:28:58 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@e362c57
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@e362c57
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@e362c57
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6548bb7d
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35e52059
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@772485dd
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@492fc69e
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@492fc69e
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@492fc69e
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@159e366
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@159e366
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@159e366
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@39fc6b2c
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@39fc6b2c
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39fc6b2c
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4837595f
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4837595f
2021-04-06 14:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4837595f
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3fcdcf
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3fcdcf
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3fcdcf
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1e34c607
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1e34c607
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e34c607
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@aa5455e
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@aa5455e
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@aa5455e
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1af05b03
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1af05b03
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4a8b5227
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4a8b5227
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@27f0ad19
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@27f0ad19
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@44ea608c
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@30457e14
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@c1a4620
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@c1a4620
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@77e2a6e2
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@77e2a6e2
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@22fa55b2
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@22fa55b2
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c2f1700
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c2f1700
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5298dead
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5298dead
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b50150
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b50150
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@17f460bb
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@17f460bb
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@23c650a3
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@23c650a3
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60222fd8
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60222fd8
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@169da7f2
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@169da7f2
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@37ff4054
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37ff4054
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ba63fe5
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ba63fe5
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ba63fe5
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@584f5497
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@5eefa415
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5eefa415
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5eefa415
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f4d9395
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@27f3b6d6
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@55b62629
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55b62629
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@867ba60
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@867ba60
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@456abb66
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@456abb66
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@70d8de
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@70d8de
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@63a5d002
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@63a5d002
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@771158fb
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@437ebf59
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@437ebf59
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@437ebf59
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@78d39a69
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@78d39a69
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@78d39a69
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@6bfdb014
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2d140a7
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@7ea4d397
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7ea4d397
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@7ea4d397
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@67fe380b
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@67fe380b
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@67fe380b
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@415e0bcb
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@1d81e101
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@44f9779c
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@44f9779c
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4c9e9fb8
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@74a195a4
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@74a195a4
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@15515c51
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@15515c51
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11a82d0f
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4604b900
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@edf4f36
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@654c1a54
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@654c1a54
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19f21b6b
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1532c619
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46044faa
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1358b28e
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a78dacd
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19f9d595
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7de4a01f
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bfeb1ef
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 14:28:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 14:28:59 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 14:28:59 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 14:28:59 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 14:28:59 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 14:28:59 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 14:28:59 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 14:28:59 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 14:28:59 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 14:28:59 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 14:28:59 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 14:28:59 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 14:28:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37ce3644
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37ce3644
2021-04-06 14:28:59 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@63a5d002
2021-04-06 14:28:59 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c6189d5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4248e66b]
2021-04-06 14:28:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:28:59 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 14:28:59 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 14:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:28:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property about
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property email
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property name
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 14:28:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:28:59 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 14:28:59 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 14:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:28:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property number
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property value
2021-04-06 14:28:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:28:59 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 14:28:59 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 14:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:28:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 14:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 14:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 14:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 14:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 14:28:59 DEBUG PropertyBinder:266 - Building property description
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 14:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 14:28:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 14:28:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 14:28:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 14:28:59 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 14:28:59 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 14:28:59 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 14:28:59 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 14:28:59 DEBUG Settings:72 - Statistics: disabled
2021-04-06 14:28:59 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 14:28:59 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 14:28:59 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 14:28:59 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 14:28:59 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 14:28:59 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 14:28:59 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 14:28:59 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 14:28:59 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 14:28:59 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 14:28:59 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 14:28:59 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 14:28:59 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 14:28:59 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 14:28:59 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 14:28:59 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 14:28:59 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 14:28:59 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 14:28:59 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 14:28:59 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 14:28:59 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 14:28:59 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 14:28:59 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 14:28:59 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 14:28:59 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 14:28:59 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 14:28:59 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 14:28:59 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 14:28:59 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 14:28:59 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 14:28:59 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 14:28:59 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 14:28:59 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 14:28:59 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 14:28:59 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 14:28:59 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 service.AccountServiceTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68a4dcc6, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 14:28:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 14:28:59 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 14:28:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c6189d5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7cbeac65]
2021-04-06 14:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 14:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 14:29:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 14:29:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 14:29:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 14:29:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 14:29:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b6eae52]
2021-04-06 14:29:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 14:29:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 14:29:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 14:29:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 14:29:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:29:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:29:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 14:29:00 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 14:29:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7237f3c1]
2021-04-06 14:29:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 14:29:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 14:29:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 14:29:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:29:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:29:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 14:29:00 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 14:29:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 14:29:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@642a16aa]
2021-04-06 14:29:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 14:29:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 14:29:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:29:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:29:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 14:29:00 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 14:29:00 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 14:29:00 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 14:29:00 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 14:29:00 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 14:29:00 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 14:29:00 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 14:29:00 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 14:29:00 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4f169009
2021-04-06 14:29:00 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 7c791fce-afa0-4da4-8608-562678e1af91 (<unnamed>)
2021-04-06 14:29:00 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 14:29:00 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@39de9bda
2021-04-06 14:29:00 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 14:29:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-06 14:29:00 DEBUG TransactionImpl:81 - begin
2021-04-06 14:29:00 INFO  DefaultDeleteEventListener:214 - HHH000114: Handling transient entity in delete processing
2021-04-06 14:29:00 DEBUG TransactionImpl:98 - committing
2021-04-06 14:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:29:00 DEBUG AccountService:27 - account.findById {id = 100}
2021-04-06 14:29:00 DEBUG AccountDao:44 - account.findById {id = 100}
2021-04-06 14:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:29:00 DEBUG SessionImpl:1000 - Initializing proxy: [model.Account#100]
2021-04-06 14:29:00 DEBUG SQL:144 - select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 14:29:00 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Account#100
2021-04-06 14:29:00 DEBUG AccountService:22 - Account(id=0, client_id=0, number=UAANOTHERTEST, value=0.0)
2021-04-06 14:29:00 DEBUG AccountDao:34 - Account(id=0, client_id=0, number=UAANOTHERTEST, value=0.0)
2021-04-06 14:29:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-06 14:29:00 DEBUG TransactionImpl:81 - begin
2021-04-06 14:29:00 DEBUG TransactionImpl:98 - committing
2021-04-06 14:29:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-06 14:29:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-06 14:29:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-04-06 14:29:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-06 14:29:00 DEBUG EntityPrinter:110 - Listing entities:
2021-04-06 14:29:00 DEBUG EntityPrinter:117 - model.Account{number=UAANOTHERTEST, id=0, value=0.0, client_id=0}
2021-04-06 14:29:00 DEBUG SQL:144 - update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 14:29:00 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:324 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:94)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at dao.AccountDao.update(AccountDao.java:39)
	at service.AccountService.update(AccountService.java:23)
	at service.AccountServiceTest.update(AccountServiceTest.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
2021-04-06 14:29:00 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:324 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at dao.AccountDao.update(AccountDao.java:39)
	at service.AccountService.update(AccountService.java:23)
	at service.AccountServiceTest.update(AccountServiceTest.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
2021-04-06 14:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:29:00 DEBUG AccountService:27 - account.findById {id = 100}
2021-04-06 14:29:00 DEBUG AccountDao:44 - account.findById {id = 100}
2021-04-06 14:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:29:00 DEBUG AccountService:12 - Account(id=100, client_id=5, number=UATEST2021, value=20.2)
2021-04-06 14:29:00 DEBUG AccountDao:14 - Account(id=100, client_id=5, number=UATEST2021, value=20.2)
2021-04-06 14:29:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-06 14:29:00 DEBUG TransactionImpl:81 - begin
2021-04-06 14:29:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-06 14:29:00 DEBUG SQL:144 - insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 14:29:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 11
2021-04-06 14:29:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-06 14:29:00 DEBUG TransactionImpl:98 - committing
2021-04-06 14:29:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-06 14:29:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-06 14:29:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-06 14:29:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-06 14:29:00 DEBUG EntityPrinter:110 - Listing entities:
2021-04-06 14:29:00 DEBUG EntityPrinter:117 - model.Account{number=UATEST2021, id=11, value=20.2, client_id=5}
2021-04-06 14:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:29:00 DEBUG AccountService:27 - account.findById {id = 100}
2021-04-06 14:29:00 DEBUG AccountDao:44 - account.findById {id = 100}
2021-04-06 14:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:34:56 DEBUG AccountService:27 - account.findById {id = 1}
2021-04-06 14:34:56 DEBUG AccountDao:44 - account.findById {id = 1}
2021-04-06 14:34:56 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 14:34:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 14:34:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 14:34:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 14:34:56 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 14:34:56 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 14:34:56 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 14:34:56 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 14:34:56 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 14:34:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 14:34:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 14:34:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 14:34:57 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 14:34:57 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 14:34:57 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 14:34:57 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 14:34:57 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@13c612bd
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@13c612bd
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13c612bd
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41de5768
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e041f0c
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@11ee02f8
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@63a5e46c
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@63a5e46c
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63a5e46c
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@eadb475
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@eadb475
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@eadb475
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@1e287667
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@1e287667
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e287667
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@308a6984
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@308a6984
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@308a6984
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@bae47a0
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@bae47a0
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@bae47a0
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@10567255
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@10567255
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10567255
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@54336c81
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@54336c81
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54336c81
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a12c728
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a12c728
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@492fc69e
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@492fc69e
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@159e366
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@159e366
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@59221b97
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@704b2127
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2bffa76d
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2bffa76d
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@7668d560
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7668d560
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@199e4c2b
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@199e4c2b
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b273a59
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b273a59
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1162410a
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1162410a
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@515f4131
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@515f4131
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6134ac4a
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6134ac4a
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@22175d4f
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@22175d4f
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5fa47fea
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5fa47fea
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@3e1162e7
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3e1162e7
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@5d52e3ef
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d52e3ef
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2b50150
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2b50150
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2b50150
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b530eb9
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@44d70181
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@44d70181
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@44d70181
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50b1f030
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@680bddf5
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@26f1249d
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26f1249d
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@18151a14
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18151a14
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@56bc3fac
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@56bc3fac
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@3ecedf21
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3ecedf21
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@125c082e
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@125c082e
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6df20ade
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@2fb69ff6
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2fb69ff6
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@2fb69ff6
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1929425f
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1929425f
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1929425f
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@535b8c24
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@5e63cad
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@654b72c0
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@654b72c0
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@654b72c0
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7da10b5b
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7da10b5b
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7da10b5b
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@5b989dc7
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@46b695ec
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@62d0ac62
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62d0ac62
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64d43929
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@3c818ac4
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c818ac4
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@2d140a7
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d140a7
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77e80a5e
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@49298ce7
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@415e0bcb
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@40147317
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40147317
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c7a977f
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@55caeb35
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6d868997
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c383e33
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@74a195a4
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76304b46
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2fa3be26
2021-04-06 14:34:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4287d447
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 14:34:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 14:34:57 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 14:34:57 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 14:34:57 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 14:34:57 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 14:34:57 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 14:34:57 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 14:34:57 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 14:34:57 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 14:34:57 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 14:34:57 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 14:34:57 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 14:34:58 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 14:34:58 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@34cf294c
2021-04-06 14:34:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@34cf294c
2021-04-06 14:34:58 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@125c082e
2021-04-06 14:34:58 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40f8f5a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1ffcf674]
2021-04-06 14:34:58 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:34:58 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 14:34:58 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:34:58 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property about
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property email
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property name
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 14:34:58 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:34:58 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 14:34:58 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:34:58 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property number
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property value
2021-04-06 14:34:58 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:34:58 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 14:34:58 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:34:58 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 14:34:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 14:34:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 14:34:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 14:34:58 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 14:34:58 DEBUG PropertyBinder:266 - Building property description
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 14:34:58 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 14:34:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 14:34:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 14:34:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 14:34:58 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 14:34:58 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 14:34:58 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 14:34:58 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 14:34:58 DEBUG Settings:72 - Statistics: disabled
2021-04-06 14:34:58 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 14:34:58 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 14:34:58 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 14:34:58 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 14:34:58 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 14:34:58 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 14:34:58 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 14:34:58 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 14:34:58 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 14:34:58 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 14:34:58 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 14:34:58 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 14:34:58 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 14:34:58 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 14:34:58 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 14:34:58 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 14:34:58 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 14:34:58 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 14:34:58 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 14:34:58 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 14:34:58 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 14:34:58 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 14:34:58 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 14:34:58 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 14:34:58 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 14:34:58 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 14:34:58 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 14:34:58 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 14:34:58 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 14:34:58 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 14:34:58 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 14:34:58 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 14:34:58 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 14:34:58 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 14:34:58 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 14:34:58 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1229a2b7, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 14:34:58 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 14:34:58 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 14:34:58 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40f8f5a8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6dfa915a]
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 14:34:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 14:34:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6870c3c2]
2021-04-06 14:34:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 14:34:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 14:34:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 14:34:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 14:34:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:34:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:34:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 14:34:58 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 14:34:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f674ac]
2021-04-06 14:34:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 14:34:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 14:34:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 14:34:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:34:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:34:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 14:34:58 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 14:34:58 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 14:34:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cbbd07]
2021-04-06 14:34:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 14:34:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 14:34:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:34:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:34:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 14:34:58 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 14:34:58 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 14:34:58 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 14:34:58 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 14:34:58 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 14:34:58 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 14:34:58 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 14:34:58 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 14:34:58 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@51f18e31
2021-04-06 14:34:58 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: bf0494cb-0114-444a-97f5-10e5fb606fcc (<unnamed>)
2021-04-06 14:34:58 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 14:34:58 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@20d33ea
2021-04-06 14:34:58 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 14:34:58 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:34:58 DEBUG SessionImpl:1000 - Initializing proxy: [model.Account#1]
2021-04-06 14:34:58 DEBUG SQL:144 - select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 14:34:58 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Account#1]
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:211 - Processing attribute `client_id` : value = 1
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:242 - Attribute (`client_id`)  - enhanced for lazy-loading? - false
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:211 - Processing attribute `number` : value = UA11111111
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:242 - Attribute (`number`)  - enhanced for lazy-loading? - false
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:211 - Processing attribute `value` : value = 950.5
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:242 - Attribute (`value`)  - enhanced for lazy-loading? - false
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Account#1]
2021-04-06 14:34:58 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Account#1
2021-04-06 14:34:58 DEBUG StatusService:28 - status.findByID {id = 1}
2021-04-06 14:34:58 DEBUG StatusDao:45 - status.findByID {id = 1}
2021-04-06 14:34:58 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:34:58 DEBUG SessionImpl:1000 - Initializing proxy: [model.Status#1]
2021-04-06 14:34:58 DEBUG SQL:144 - select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 14:34:58 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Status#1]
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:211 - Processing attribute `alias` : value = STANDARD
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:242 - Attribute (`alias`)  - enhanced for lazy-loading? - false
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = For regular user
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Status#1]
2021-04-06 14:34:58 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Status#1
2021-04-06 14:34:58 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 14:34:58 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 14:34:58 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:34:58 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 14:34:58 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 14:34:58 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 14:34:58 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 14:34:58 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
2021-04-06 14:35:08 DEBUG AccountService:27 - account.findById {id = 1}
2021-04-06 14:35:08 DEBUG AccountDao:44 - account.findById {id = 1}
2021-04-06 14:35:08 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-06 14:35:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 14:35:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 14:35:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 14:35:08 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-04-06 14:35:08 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-06 14:35:08 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-06 14:35:08 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-06 14:35:08 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-06 14:35:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-06 14:35:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-06 14:35:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-06 14:35:08 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-06 14:35:08 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-06 14:35:09 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-06 14:35:09 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-06 14:35:09 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@51bde877
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@51bde877
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51bde877
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2fb68ec6
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1c65121
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@17ae98d7
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@7cc9ce8
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@7cc9ce8
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7cc9ce8
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@1f2d2181
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@1f2d2181
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f2d2181
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@6c44052e
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@6c44052e
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c44052e
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@9257031
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@9257031
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9257031
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3d9fc57a
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3d9fc57a
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3d9fc57a
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@438bad7c
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@438bad7c
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@438bad7c
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a67318f
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4a67318f
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a67318f
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44ea608c
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44ea608c
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20765ed5
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20765ed5
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4c432866
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4c432866
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77e2a6e2
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64d7b720
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@251ebf23
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@251ebf23
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@62df0ff3
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@62df0ff3
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5ab9b447
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5ab9b447
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6b530eb9
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6b530eb9
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c0f7678
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c0f7678
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4163f1cd
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4163f1cd
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a9c84a5
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a9c84a5
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@710b30ef
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@710b30ef
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ba45490
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ba45490
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6f330eb9
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f330eb9
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@341a8659
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@341a8659
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2f19f2aa
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2f19f2aa
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2f19f2aa
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1929425f
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4a951911
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4a951911
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4a951911
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@33a053d
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6034e75d
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@31be6b49
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@31be6b49
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@408613cc
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@408613cc
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@771158fb
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@771158fb
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@1d269ed7
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1d269ed7
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1da6ee17
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1da6ee17
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71154f21
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@2d140a7
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2d140a7
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@2d140a7
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7ea4d397
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7ea4d397
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7ea4d397
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@67fe380b
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@415e0bcb
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@22d6cac2
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@22d6cac2
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@22d6cac2
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@44f9779c
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@44f9779c
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@44f9779c
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4c9e9fb8
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@19542407
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@3af37506
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3af37506
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@21ae6e73
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4604b900
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4604b900
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@edf4f36
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@edf4f36
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@673bb956
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@680362a
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1761de10
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@907f2b7
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@907f2b7
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b61d0c6
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f815e7f
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@65e7f52a
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@304b9f1a
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@75699e35
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@107e5441
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4aeaadc1
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@263558c9
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-06 14:35:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-06 14:35:09 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-06 14:35:09 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-06 14:35:09 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=postgres}
2021-04-06 14:35:09 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-06 14:35:09 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-06 14:35:09 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-06 14:35:09 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-06 14:35:09 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-06 14:35:09 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-06 14:35:09 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-06 14:35:09 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-06 14:35:09 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4ad3d266
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4ad3d266
2021-04-06 14:35:09 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1da6ee17
2021-04-06 14:35:09 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@167279d1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@138caeca]
2021-04-06 14:35:10 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Client
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:35:10 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-06 14:35:10 DEBUG EntityBinder:873 - Bind entity model.Client on table clients
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:id]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:35:10 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:about]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property about
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:email]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property email
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:name]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property name
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Client:phone]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property phone
2021-04-06 14:35:10 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Account
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:35:10 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-06 14:35:10 DEBUG EntityBinder:873 - Bind entity model.Account on table accounts
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:35:10 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:client_id]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property client_id
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:number]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property number
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Account:value]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property value
2021-04-06 14:35:10 DEBUG AnnotationBinder:560 - Binding entity from annotated class: model.Status
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-06 14:35:10 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-06 14:35:10 DEBUG EntityBinder:873 - Bind entity model.Status on table statuses
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:id]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property id
2021-04-06 14:35:10 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:alias]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property alias
2021-04-06 14:35:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-06 14:35:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-06 14:35:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [model.Status:description]
2021-04-06 14:35:10 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-06 14:35:10 DEBUG PropertyBinder:266 - Building property description
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-06 14:35:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-06 14:35:10 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-06 14:35:10 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-06 14:35:10 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-06 14:35:10 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-06 14:35:10 DEBUG Settings:68 - SessionFactory name : null
2021-04-06 14:35:10 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-06 14:35:10 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-06 14:35:10 DEBUG Settings:72 - Statistics: disabled
2021-04-06 14:35:10 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-06 14:35:10 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-06 14:35:10 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-06 14:35:10 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-06 14:35:10 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-06 14:35:10 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-06 14:35:10 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-06 14:35:10 DEBUG Settings:82 - Default null ordering: NONE
2021-04-06 14:35:10 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-06 14:35:10 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-06 14:35:10 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-06 14:35:10 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-06 14:35:10 DEBUG Settings:90 - Query language substitutions: {}
2021-04-06 14:35:10 DEBUG Settings:91 - Named query checking : enabled
2021-04-06 14:35:10 DEBUG Settings:93 - Second-level cache: disabled
2021-04-06 14:35:10 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-06 14:35:10 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-06 14:35:10 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-06 14:35:10 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-06 14:35:10 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-06 14:35:10 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-06 14:35:10 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-06 14:35:10 DEBUG Settings:102 - JDBC batch size: 15
2021-04-06 14:35:10 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-06 14:35:10 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-06 14:35:10 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-06 14:35:10 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-06 14:35:10 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-06 14:35:10 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-06 14:35:10 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-06 14:35:10 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-06 14:35:10 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-06 14:35:10 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-06 14:35:10 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-06 14:35:10 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-06 14:35:10 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\lib\idea_rt.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.0-M1\junit-platform-launcher-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-engine\1.8.0-M1\junit-platform-engine-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.0-M1\junit-jupiter-engine-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk8\1.4.20\kotlin-stdlib-jdk8-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib\1.4.20\kotlin-stdlib-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-common\1.4.20\kotlin-stdlib-common-1.4.20.jar;C:\Users\denis\.m2\repository\org\jetbrains\annotations\13.0\annotations-13.0.jar;C:\Users\denis\.m2\repository\org\jetbrains\kotlin\kotlin-stdlib-jdk7\1.4.20\kotlin-stdlib-jdk7-1.4.20.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\plugins\junit\lib\junit-rt.jar;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\test-classes;C:\Users\denis\Desktop\Hillel\Elementary\HW22\target\classes;C:\Users\denis\.m2\repository\org\projectlombok\lombok\1.18.12\lombok-1.18.12.jar;C:\Users\denis\.m2\repository\org\hibernate\hibernate-core\5.4.28.Final\hibernate-core-5.4.28.Final.jar;C:\Users\denis\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\denis\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\denis\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\denis\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\denis\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\denis\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\denis\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\denis\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\denis\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\denis\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\denis\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\denis\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\denis\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\denis\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\denis\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\denis\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\denis\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\denis\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\denis\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.0-M1\junit-jupiter-api-5.8.0-M1.jar;C:\Users\denis\.m2\repository\org\apiguardian\apiguardian-api\1.1.1\apiguardian-api-1.1.1.jar;C:\Users\denis\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\denis\.m2\repository\org\junit\platform\junit-platform-commons\1.8.0-M1\junit-platform-commons-1.8.0-M1.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-junit-jupiter\3.8.0\mockito-junit-jupiter-3.8.0.jar;C:\Users\denis\.m2\repository\org\mockito\mockito-core\3.8.0\mockito-core-3.8.0.jar;C:\Users\denis\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.20\byte-buddy-agent-1.10.20.jar;C:\Users\denis\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=America/Mexico_City, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 checker.EntitiesCheckerTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\denis, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-11-04, java.home=C:\Users\denis\.jdks\corretto-11.0.9.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.9.1+12-LTS, user.name=denis, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.9.12.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=C:\Users\denis\AppData\Local\Temp\, java.version=11.0.9.1, user.dir=C:\Users\denis\Desktop\Hillel\Elementary\HW22, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5f7989fa, java.library.path=C:\Users\denis\.jdks\corretto-11.0.9.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Program Files\nodejs\;C:\Program Files\MATLAB\R2015b\runtime\win64;C:\Program Files\MATLAB\R2015b\bin;C:\Program Files\MATLAB\R2015b\polyspace\bin;C:\Program Files\Mathlab\runtime\win64;C:\Program Files\Mathlab\bin;C:\Program Files\Mathlab\polyspace\bin;C:\Users\denis\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;C:\Users\denis\AppData\Local\atom\bin;C:\Users\denis\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\WebStorm 2020.3.2\bin;;C:\Users\denis\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.9.1+12-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=14, java.class.version=55.0}
2021-04-06 14:35:10 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-06 14:35:10 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-06 14:35:10 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@167279d1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6c3659be]
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Client] is safe
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Client
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Account] is safe
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [model.Status] is safe
2021-04-06 14:35:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Status
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Client
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3929 -  Version select: select id from clients where id =?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-06 14:35:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e5d243]
2021-04-06 14:35:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-06 14:35:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-06 14:35:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-06 14:35:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-06 14:35:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:35:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:35:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Client)
    - Returns
       - EntityReturnImpl(entity=model.Client, querySpaceUid=<gen:0>, path=model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-06 14:35:10 DEBUG EntityLoader:129 - Static select for entity model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Account
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3929 -  Version select: select id from accounts where id =?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-06 14:35:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294aba23]
2021-04-06 14:35:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-06 14:35:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-06 14:35:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-06 14:35:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:35:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:35:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-06 14:35:10 DEBUG EntityLoader:129 - Static select for entity model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: model.Status
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3929 -  Version select: select id from statuses where id =?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-06 14:35:10 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-06 14:35:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d3b58ca]
2021-04-06 14:35:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-06 14:35:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-06 14:35:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-04-06 14:35:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-06 14:35:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=model.Status)
    - Returns
       - EntityReturnImpl(entity=model.Status, querySpaceUid=<gen:0>, path=model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-06 14:35:10 DEBUG EntityLoader:129 - Static select for entity model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 14:35:10 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-06 14:35:10 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-06 14:35:10 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-06 14:35:10 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 14:35:10 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-06 14:35:10 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-06 14:35:10 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-06 14:35:10 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@57efc6fd
2021-04-06 14:35:10 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: bd46778c-8c4e-4711-8243-dbe13ba8c643 (<unnamed>)
2021-04-06 14:35:10 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-06 14:35:10 ERROR HibernateUtil:26 - Configuration error: org.hibernate.cfg.Configuration@5fcd1c5f
2021-04-06 14:35:10 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-06 14:35:10 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:35:10 DEBUG SessionImpl:1000 - Initializing proxy: [model.Account#1]
2021-04-06 14:35:10 DEBUG SQL:144 - select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-06 14:35:10 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Account#1]
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:211 - Processing attribute `client_id` : value = 1
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:242 - Attribute (`client_id`)  - enhanced for lazy-loading? - false
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:211 - Processing attribute `number` : value = UA11111111
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:242 - Attribute (`number`)  - enhanced for lazy-loading? - false
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:211 - Processing attribute `value` : value = 950.5
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:242 - Attribute (`value`)  - enhanced for lazy-loading? - false
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Account#1]
2021-04-06 14:35:10 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Account#1
2021-04-06 14:35:10 DEBUG StatusService:28 - status.findByID {id = 1}
2021-04-06 14:35:10 DEBUG StatusDao:45 - status.findByID {id = 1}
2021-04-06 14:35:10 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:35:10 DEBUG SessionImpl:1000 - Initializing proxy: [model.Status#1]
2021-04-06 14:35:10 DEBUG SQL:144 - select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-06 14:35:10 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Status#1]
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:211 - Processing attribute `alias` : value = STANDARD
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:242 - Attribute (`alias`)  - enhanced for lazy-loading? - false
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:211 - Processing attribute `description` : value = For regular user
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:242 - Attribute (`description`)  - enhanced for lazy-loading? - false
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Status#1]
2021-04-06 14:35:10 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Status#1
2021-04-06 14:35:10 DEBUG ClientService:27 - client.findById {id = 1}
2021-04-06 14:35:10 DEBUG ClientDao:48 - client.findById {id = 1}
2021-04-06 14:35:10 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-06 14:35:10 DEBUG SessionImpl:1000 - Initializing proxy: [model.Client#1]
2021-04-06 14:35:10 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-06 14:35:10 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:198 - Resolving attributes for [model.Client#1]
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = Cool java dev
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = alex@mail.com
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Alex
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380958089090
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-06 14:35:10 DEBUG TwoPhaseLoad:381 - Done materializing entity [model.Client#1]
2021-04-06 14:35:10 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : model.Client#1
